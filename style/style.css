html {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Work Sans", sans-serif;
}

.container {
  height: 100vh;
  width: 100vh;
  margin: 0 auto;
  text-align: center;
  visibility: hidden;
  position: relative;
  overflow: hidden;
}

.container div.six {
  top: 10vh;
  z-index: 1;
}

.container div.seven,
.container div.eight {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
}

.container > div {
  position: absolute;
  left: 0;
  right: 0;
  top: 20vh;
}

.one {
  font-size: 4.5rem;
}

.one > img {
  vertical-align: middle;
  margin-bottom: 10px;
  max-width: 100%;
  height: auto;
}

.two {
  font-size: 1.2rem;
  font-weight: lighter;
}

.three {
  font-size: 3rem;
}

.four .text-box {
  width: 600px;
  margin: 0 auto;
  border: 3px solid #aaa;
  border-radius: 5px;
  padding: 10px;
  position: relative;
}

.text-box p {
  margin: 0;
  text-align: left;
}

.text-box span {
  visibility: hidden;
}

.text-box .fake-btn {
  position: absolute;
  right: 5px;
  bottom: 5px;
  color: #fff;
  background-color: rgb(21, 161, 237);
  padding: 5px 8px;
  border-radius: 3px;
}

.five p {
  font-size: 2rem;
  position: absolute;
  left: 0;
  right: 0;
}

.idea-3 strong {
  padding: 3px 5px;
  border-radius: 3px;
  display: inline-block;
}

.five .idea-5 {
  font-size: 4rem;
}

.idea-5 span,
.idea-6 span,
.wish-hbd span {
  display: inline-block;
}

.idea-6 span {
  font-size: 15rem;
}

.six {
  position: relative;
}

.six img {
  display: inline-block;
  max-width: 100%;
  height: auto;
}

.six .hat {
  position: absolute;
  width: 80px;
  top: -35px;
  left: 41.5%;
  /* transform: scale(0.1); */
}

.baloons img {
  display: inline-block;
  position: absolute;
}

.baloons img:nth-child(even) {
  left: -10%;
}

.baloons img:nth-child(odd) {
  right: -10%;
}

.baloons img:nth-child(3n + 0) {
  left: 30%;
}

.eight svg {
  width: 25px;
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  z-index: -1;
}

.eight svg:nth-child(1) {
  top: 7vh;
  left: 5vw;
  fill: #bd6ecf;
}

.eight svg:nth-child(2) {
  top: 23vh;
  left: 35vw;
  fill: #7dd175;
}

.eight svg:nth-child(3) {
  top: 33vh;
  left: 23vw;
  fill: #349d8b;
}

.eight svg:nth-child(4) {
  top: 43vh;
  left: 57vw;
  fill: #347a9d;
}

.eight svg:nth-child(5) {
  top: 68vh;
  left: 7vw;
  fill: #c66053;
}

.eight svg:nth-child(6) {
  top: 42vh;
  left: 77vw;
  fill: #bfaa40;
}

.eight svg:nth-child(7) {
  top: 68vh;
  left: 83vw;
  fill: #e3bae8;
}

.eight svg:nth-child(8) {
  top: 86vh;
  left: 37vw;
  fill: #8762cb;
}

.eight svg:nth-child(9) {
  top: 94vh;
  left: 87vw;
  fill: #9a90da;
}

.wish-hbd {
  font-size: 3em;
  margin: 0;
  text-transform: uppercase;
}

.wish h5 {
  font-weight: lighter;
  font-size: 2rem;
  margin: 10px 0 0;
}

.nine p {
  font-size: 2rem;
  font-weight: lighter;
}

#replay {
  z-index: 3;
  cursor: pointer;
}

/* Media Queries */
@media screen and (max-height: 1000px) {
  .six .hat {
    left: 40%;
  }
}

@media screen and (max-height: 800px) {
  .six .hat {
    left: 37%;
  }
}

@media screen and (max-height: 700px) {
  .six .hat {
    left: 32%;
  }
}

@media screen and (max-height: 850px) and (max-width: 450px) {
  .six .hat {
    left: 32%;
  }
}

@media screen and (max-width: 500px) {
  .container {
    width: 90%;
  }

  .four .text-box {
    width: 90%;
  }

  .text-box .fake-btn {
    right: 5px;
    bottom: -38px;
  }

  .idea-5 span {
    display: block;
  }

  .idea-6 span {
    font-size: 10rem;
  }

  .six .hat {
    width: 50px;
    top: -20px;
  }

  .wish-hbd {
    font-size: 2.2em;
  }

  .wish h5 {
    font-size: 1.4rem;
  }

  .nine p {
    font-size: 1.5rem;
    font-weight: lighter;
  }
}

<body>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contador hasta 21 de Diciembre 2024</title>
    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: 'Roboto', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            background: linear-gradient(135deg, #1a2a6c, #2a4858);
            color: #fff;
            overflow: hidden;
        }
        #bubble-background {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 0;
        }
        .container {
            text-align: center;
            padding: 40px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(10px);
            max-width: 600px;
            width: 90%;
            z-index: 1;
        }
        h1 {
            font-size: 2rem;
            margin-bottom: 30px;
            font-weight: 300;
        }
        #countdown {
            display: flex;
            justify-content: space-around;
            margin-bottom: 40px;
        }
        .time-block {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .time-value {
            font-size: 3rem;
            font-weight: 700;
            color: #4fc3f7;
        }
        .time-label {
            font-size: 0.9rem;
            text-transform: uppercase;
            color: #b3e5fc;
            margin-top: 5px;
        }
        #password-section {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        input {
            padding: 12px;
            font-size: 1rem;
            border: none;
            border-bottom: 2px solid #b3e5fc;
            margin-right: 10px;
            background: transparent;
            color: #fff;
            transition: border-color 0.3s;
            outline: none;
        }
        input::placeholder {
            color: #b3e5fc;
        }
        input:focus {
            border-bottom-color: #4fc3f7;
        }
        button {
            padding: 12px 24px;
            font-size: 1rem;
            cursor: pointer;
            background-color: #4fc3f7;
            color: #1a2a6c;
            border: none;
            border-radius: 30px;
            transition: background-color 0.3s, transform 0.1s;
            outline: none;
        }
        button:hover {
            background-color: #81d4fa;
        }
        button:active {
            transform: scale(0.98);
        }
    </style>
</head>
<body>
    <canvas id="bubble-background"></canvas>
    <div class="container">
        <h1>Cuenta regresiva para el gran día</h1>
        <div id="countdown"></div>
        <div id="password-section">
            <input type="password" id="password-input" placeholder="Ingresa la contraseña">
            <button onclick="checkPassword()">Verificar</button>
        </div>
    </div>

    <script>
        // Contador
        const countDownDate = new Date("Dec 21, 2024 00:00:00").getTime();

        const x = setInterval(function() {
            const now = new Date().getTime();
            const distance = countDownDate - now;

            const days = Math.floor(distance / (1000 * 60 * 60 * 24));
            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((distance % (1000 * 60)) / 1000);

            document.getElementById("countdown").innerHTML = 
                `<div class="time-block"><div class="time-value">${days}</div><div class="time-label">días</div></div>` +
                `<div class="time-block"><div class="time-value">${hours}</div><div class="time-label">horas</div></div>` +
                `<div class="time-block"><div class="time-value">${minutes}</div><div class="time-label">minutos</div></div>` +
                `<div class="time-block"><div class="time-value">${seconds}</div><div class="time-label">segundos</div></div>`;

            if (distance < 0) {
                clearInterval(x);
                document.getElementById("countdown").innerHTML = "¡EXPIRADO!";
            }
        }, 1000);

        function checkPassword() {
            const password = document.getElementById("password-input").value;
            if (password === "Egozkue13") {
                alert("¡Contraseña correcta!");
            } else {
                alert("Contraseña incorrecta. Intenta de nuevo.");
            }
        }

        // Fondo de burbujas
        const canvas = document.getElementById('bubble-background');
        const ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        let bubbles = [];

        function Bubble() {
            this.x = Math.random() * canvas.width;
            this.y = Math.random() * canvas.height;
            this.size = Math.random() * 5 + 1;
            this.speed = Math.random() * 0.5 + 0.1;
        }

        Bubble.prototype.move = function() {
            this.y -= this.speed;
            if (this.y < 0) {
                this.y = canvas.height;
            }
        }

        function createBubbles() {
            for (let i = 0; i < 100; i++) {
                bubbles.push(new Bubble());
            }
        }

        function drawBubbles() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = 'rgba(79, 195, 247, 0.3)';
            bubbles.forEach(bubble => {
                ctx.beginPath();
                ctx.arc(bubble.x, bubble.y, bubble.size, 0, Math.PI * 2);
                ctx.fill();
                bubble.move();
            });
            requestAnimationFrame(drawBubbles);
        }

        createBubbles();
        drawBubbles();

        // Movimiento de burbujas con el ratón
        document.addEventListener('mousemove', (e) => {
            bubbles.forEach(bubble => {
                let dx = e.clientX - bubble.x;
                let dy = e.clientY - bubble.y;
                let distance = Math.sqrt(dx * dx + dy * dy);
                if (distance < 100) {
                    bubble.x += dx / distance * 2;
                    bubble.y += dy / distance * 2;
                }
            });
        });
    </script>
</body>
</html>
